{"version":3,"sources":["images/elfIcon.png","images/PizzaCover.png","images/PizzaImage.png","components/MenuButtons.js","components/DropDownMenu.js","components/TopHeader.js","components/ItemCard.js","components/OrderCard.js","components/RevealPizza.js","components/MenuTabs.js","containers/ItemCartContainer.js","App.js","serviceWorker.js","reducers/MenuItemReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuButtons","props","react_default","a","createElement","className","onClick","handleFilteredItems","name","itemCount","DropDownMenu","Sticky","id","Dropdown","basic","inline","icon","Icon","size","Menu","Button","Group","vertical","href","target","rel","link","TopHeader","Header","textAlign","fluid","components_DropDownMenu","Popup","header","trigger","Image","src","elfIcon","position","on","ItemCard","Card","centered","img_url","Content","Meta","price","Description","description","extra","Modal","color","handleAddToCart","value","itemName","concat","actions","key","content","positive","style","OrderCard","handleRemoveItem","index","negative","RevealPizza","Reveal","animated","visible","circular","PizzaCover","hoverable","hidden","PizzaImage","MenuTabs","state","allMenuItems","pizzaMenuItems","wingMenuItems","beverageMenuItems","isMenuItem","cartListItems","totalPrice","customerName","customerPhone","specialInstruction","isModal","filterItems","category","_this","filter","item","ev","wingItems","setState","console","log","pizzaItems","beverageItems","map","parseFloat","toFixed","messageHidden","selectedItem","find","toString","cartObject","updatedCartItem","slice","push","splice","prevState","handleCartInput","Object","defineProperty","handleCartForm","preventDefault","length","Order_Time","Date","toLocaleTimeString","Customer_Name","Customer_Phone","Special_Instruction","Total_Price","order_lists","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","catch","err","alert","handleModalClose","_this2","this","then","resp","json","_this3","components_TopHeader","components_MenuButtons","wing","components_ItemCard","beverage","pizza","itemsPerRow","components_OrderCard","Form","onSubmit","widths","Field","control","Input","label","placeholder","required","onChange","type","TextArea","primary","open","width","compact","components_RevealPizza","Component","ItemCartContainer","components_MenuTabs","App","containers_ItemCartContainer","Boolean","window","location","hostname","match","initialState","MenuItemReducer","arguments","undefined","store","createStore","reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4QCYzBC,EAXK,SAACC,GACnB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaC,QAASL,EAAMM,oBAAqBC,KAAK,cAAxE,iBACAN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaC,QAASL,EAAMM,oBAAqBC,KAAK,eAAxE,SACAN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaC,QAASL,EAAMM,oBAAqBC,KAAK,kBAAxE,aACAN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BC,QAASL,EAAMM,oBAAqBC,KAAK,cAA1F,WAAgHP,EAAMQ,6FCgB/GC,EApBK,SAACT,GACnB,OACEC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,GAAG,YACTV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,OAAK,EAACC,QAAM,EAACC,KAAKd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOT,KAAK,OAAOU,KAAK,SAClDhB,EAAAC,EAAAC,cAACS,EAAA,EAASM,KAAV,CAAeP,GAAG,uBAChBV,EAAAC,EAAAC,cAACgB,EAAA,EAAOC,MAAR,CAAcC,UAAQ,GACpBpB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQd,QAASL,EAAMM,oBAAqBC,KAAK,eAAjD,cACAN,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQd,QAASL,EAAMM,oBAAqBC,KAAK,cAAjD,sBACAN,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQd,QAASL,EAAMM,oBAAqBC,KAAK,kBAAjD,kBACAN,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,4DAA4DC,OAAO,SAASC,IAAI,uBAAsBvB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,mCACjGlB,EAAAC,EAAAC,cAAA,WACfF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,iCAAiCC,OAAO,SAASC,IAAI,uBAC3DvB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMT,KAAK,SAASU,KAAK,QAAQQ,MAAI,KACvCxB,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,2CAA2CC,OAAO,SAASC,IAAI,uBACrEvB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMT,KAAK,WAAWU,KAAK,QAAQQ,MAAI,SCDpCC,EAXG,SAAC1B,GAAD,OAChBC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQV,KAAK,SAASW,UAAU,SAASjB,GAAG,WAAWkB,MAAM,QAC3D5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAcxB,oBAAqBN,EAAMM,sBACzCL,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOC,OAAO,OAAOC,QAAShC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,IAAKC,IAAUnB,KAAK,OAAOZ,QAASL,EAAMM,oBAAqBC,KAAK,WAAWH,UAAU,cAAeiC,SAAS,gBAAgBC,GAAG,UACzKrC,EAAAC,EAAAC,cAAA,KAAGQ,GAAG,WAAN,gECSO4B,EAlBE,SAACvC,GAAD,OACbC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,UAAQ,EAACrC,UAAU,cACvBH,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,IAAKnC,EAAM0C,QAASzB,KAAK,SAASwB,UAAQ,EAACrC,UAAU,cAC5DH,EAAAC,EAAAC,cAACqC,EAAA,EAAKG,QAAN,KACE1C,EAAAC,EAAAC,cAACqC,EAAA,EAAKb,OAAN,KAAc3B,EAAMO,MACpBN,EAAAC,EAAAC,cAACqC,EAAA,EAAKI,KAAN,UAAc5C,EAAM6C,OACpB5C,EAAAC,EAAAC,cAACqC,EAAA,EAAKM,YAAN,KAAkB7C,EAAAC,EAAAC,cAAA,cAASH,EAAM+C,eAEnC9C,EAAAC,EAAAC,cAACqC,EAAA,EAAKG,QAAN,CAAcK,OAAK,GACjB/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACEhB,QAAWhC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQU,OAAK,EAACqB,MAAM,OAAO7C,QAASL,EAAMmD,gBAAiBC,MAAOpD,EAAMqD,UAAxE,eACXrB,OAAM,IAAAsB,OAAMtD,EAAMO,KAAZ,kCACNgD,QAAS,CAAC,CAAEC,IAAK,OAAQC,QAAS,OAAQC,UAAU,EAAM7B,OAAO,IACjE8B,MAAO,CAAC/B,UAAW,UAAWX,KAAK,aCE9B2C,EAfG,SAAC5D,GACjB,OACEC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,UAAQ,EAACrC,UAAU,aAAaO,GAAG,aACvCV,EAAAC,EAAAC,cAACqC,EAAA,EAAKG,QAAN,KACE1C,EAAAC,EAAAC,cAACqC,EAAA,EAAKb,OAAN,KAAc3B,EAAMqD,UACpBpD,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,IAAKnC,EAAM0C,QAASzB,KAAK,OAAON,GAAG,aAC1CV,EAAAC,EAAAC,cAACqC,EAAA,EAAKI,KAAN,UAAe5C,EAAM6C,QAEvB5C,EAAAC,EAAAC,cAACqC,EAAA,EAAKG,QAAN,CAAcK,OAAK,GACjB/C,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQd,QAASL,EAAM6D,iBAAmBT,MAAOpD,EAAM8D,MAAOC,UAAQ,EAACpD,GAAG,mBAAmB8B,SAAS,QAAtG,0DCKOuB,EAXK,SAAChE,GAAD,OAClBC,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAQC,SAAS,aAAavD,GAAG,kBAC/BV,EAAAC,EAAAC,cAAC8D,EAAA,EAAOtB,QAAR,CAAgBwB,SAAO,GACrBlE,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAO0B,QAAQxD,EAAAC,EAAAC,cAAA,wIAA+HF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,4DAA4DC,OAAO,SAASC,IAAI,uBAAxF,yBAA/H,KAAwQvB,EAAAC,EAAAC,cAAA,2FAA+F8B,QAAShC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOkC,UAAQ,EAACnD,KAAK,QAAQkB,IAAKkC,IAAajE,UAAU,cAAgB4B,OAAO,QAAQK,SAAS,aAAaiC,WAAS,EAAChC,GAAG,WAE5frC,EAAAC,EAAAC,cAAC8D,EAAA,EAAOtB,QAAR,CAAgB4B,QAAM,GACpBtE,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOkC,UAAQ,EAACnD,KAAK,QAAQkB,IAAKqC,SC4LzBC,6MA9LbC,MAAO,CACLC,aAAc,GAAIC,eAAe,GAAIC,cAAe,GAAIC,kBAAkB,GAC1EC,WAAY,GAAIC,cAAe,GAAIC,WAAW,EAAGC,aAAc,GAC/DC,cAAe,GAAIC,mBAAoB,GAAIC,SAAS,KAYtDC,YAAc,SAACC,GAIb,OAHYC,EAAKd,MAAMC,aAAac,OAAO,SAAAC,GACzC,OAAOA,EAAKH,WAAaA,OAK7BjF,oBAAsB,SAACqF,GACrB,OAAOA,EAAGpE,OAAOhB,MACf,IAAK,aACH,IAAIqF,EAAYJ,EAAKF,YAAY,SACjCE,EAAKK,SAAS,CAAChB,cAAee,EAAWb,WAAYY,EAAGpE,OAAOhB,OAC/DuF,QAAQC,IAAI,eAAgBH,GAC5BE,QAAQC,IAAI,eAAgBJ,EAAGpE,OAAOhB,MACtC,MACF,IAAK,cACH,IAAIyF,EAAaR,EAAKF,YAAY,SAClCE,EAAKK,SAAS,CAACjB,eAAgBoB,EAAYjB,WAAYY,EAAGpE,OAAOhB,OACjE,MACF,IAAK,iBACH,IAAI0F,EAAgBT,EAAKF,YAAY,YACrCE,EAAKK,SAAS,CAACf,kBAAmBmB,EAAelB,WAAYY,EAAGpE,OAAOhB,OACvE,MACF,IAAK,aACHiF,EAAKK,SAAS,CAACd,WAAYY,EAAGpE,OAAOhB,OACrC,IAAI0E,EAAa,EACjBO,EAAKd,MAAMM,cAAckB,IAAI,SAAAR,GAC3B,OAAOT,EAAakB,WAAWlB,GAAckB,WAAWT,EAAK7C,SAC/D2C,EAAKK,SAAS,CAACZ,WAAYA,EAAWmB,QAAQ,GAAIC,cAAe,WACjE,MACF,IAAK,WACHb,EAAKK,SAAS,CAACd,WAAYY,EAAGpE,OAAOhB,WAM3C4C,gBAAiB,SAACwC,GAChB,IAAMW,EAAed,EAAKd,MAAMC,aAAa4B,KAAK,SAAAb,GAChD,OAAOA,EAAK/E,GAAG6F,aAAeb,EAAGpE,OAAO6B,QAEpCqD,EAAY,CAAClG,KAAM+F,EAAa/F,KAAMsC,MAAOyD,EAAazD,MAC9DH,QAAS4D,EAAa5D,QAAQ/B,GAAI2F,EAAa3F,IAC3C+F,EAAkBlB,EAAKd,MAAMM,cAAc2B,QAC/CD,EAAgBE,KAAKH,GACrBjB,EAAKK,SAAS,CAACb,cAAe0B,OAIlC7C,iBAAmB,SAAC8B,GAClBH,EAAKd,MAAMM,cAAc6B,OAAOlB,EAAGpE,OAAO6B,MAAO,GACjDoC,EAAKK,SAAS,SAACiB,GAAD,MAAgB,CAAC9B,cAAe8B,EAAU9B,iBACxD,IAAIC,EAAa,EACjBO,EAAKd,MAAMM,cAAckB,IAAI,SAAAR,GAC3B,OAAOT,EAAakB,WAAWlB,GAAckB,WAAWT,EAAK7C,SAC/D2C,EAAKK,SAAS,CAACZ,WAAYA,EAAWmB,QAAQ,QAGhDW,gBAAiB,SAACpB,GAChBH,EAAKK,SAALmB,OAAAC,EAAA,EAAAD,CAAA,GAAgBrB,EAAGpE,OAAOhB,KAAOoF,EAAGpE,OAAO6B,WAG7C8D,eAAgB,SAACvB,GAEb,GADFA,EAAGwB,iBACE3B,EAAKd,MAAMM,cAAcoC,OAAS,EAAE,CACrC,IACMC,GADc,IAAIC,MAAOC,qBAEzBC,EAAgB7B,EAAGpE,OAAO2D,aAAa9B,MACvCqE,EAAgB9B,EAAGpE,OAAO4D,cAAc/B,MACxCsE,EAAsB/B,EAAGpE,OAAO6D,mBAAmBhC,MACnDuE,EAAcnC,EAAKd,MAAMO,WACzB2C,EAAcpC,EAAKd,MAAMM,cACjC6C,MAAM,0DAA0D,CAC9DC,OAAQ,OACRC,QAAQ,CAACC,eAAgB,mBACvBC,OAAQ,oBACRC,KAAMC,KAAKC,UAAU,CAACZ,gBAAeC,iBAAgBC,sBAAqBC,cAAaN,aAAYO,kBAEtGS,MAAM,SAAAC,GACLxC,QAAQC,IAAI,cAAeuC,KAE7B9C,EAAKK,SAAS,CAACb,cAAe,GAAIE,aAAc,GAAIC,cAAe,GAAIC,mBAAoB,GAAIH,WAAY,EAAGoB,cAAe,UAAWhB,SAAS,SAE5IkD,MAAM,+BAGfC,iBAAmB,WACjBhD,EAAKK,SAAS,CAACR,SAAS,EAAON,WAAY,iGAhG1B,IAAA0D,EAAAC,KACjBb,MAAM,+DACLc,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAE,GAAQJ,EAAK5C,SAAS,CAAClB,aAAckE,MAC1CR,MAAM,SAAAC,GACLxC,QAAQC,IAAI,cAAeuC,sCA8FvB,IAAAQ,EAAAJ,KACN,MAA6B,eAA1BA,KAAKhE,MAAMK,WAEV9E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4I,EAAD,CAAWzI,oBAAqBoI,KAAKpI,sBACrCL,EAAAC,EAAAC,cAAC6I,EAAD,CAAa1I,oBAAqBoI,KAAKpI,oBAAqBE,UAAWkI,KAAKhE,MAAMM,cAAcoC,SAFlG,KAE6GnH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAChHF,EAAAC,EAAAC,cAACqC,EAAA,EAAKpB,MAAN,KACGsH,KAAKhE,MAAMG,cAAcqB,IAAI,SAAA+C,GAC5B,OAAQhJ,EAAAC,EAAAC,cAAC+I,EAAD,CAAU1F,IAAKyF,EAAKtI,GAAIJ,KAAM0I,EAAK1I,KAAMsC,MAAOoG,EAAKpG,MAAOH,QAASuG,EAAKvG,QAASK,YAAakG,EAAKlG,YAC3GI,gBAAiB2F,EAAK3F,gBAAiBE,SAAU4F,EAAKtI,QAN9D,KASsC,mBAA1B+H,KAAKhE,MAAMK,WAEf9E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4I,EAAD,CAAWzI,oBAAqBoI,KAAKpI,sBACrCL,EAAAC,EAAAC,cAAC6I,EAAD,CAAa1I,oBAAqBoI,KAAKpI,oBAAqBE,UAAWkI,KAAKhE,MAAMM,cAAcoC,SAFlG,KAE6GnH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAChHF,EAAAC,EAAAC,cAACqC,EAAA,EAAKpB,MAAN,KACGsH,KAAKhE,MAAMI,kBAAkBoB,IAAI,SAAAiD,GAChC,OAASlJ,EAAAC,EAAAC,cAAC+I,EAAD,CAAU1F,IAAK2F,EAASxI,GAAIJ,KAAM4I,EAAS5I,KAAMsC,MAAOsG,EAAStG,MAAOH,QAASyG,EAASzG,QAASK,YAAaoG,EAASpG,YAAaI,gBAAiB2F,EAAK3F,gBAAiBE,SAAU8F,EAASxI,QAL/M,MAQ8B,gBAA1B+H,KAAKhE,MAAMK,WAEf9E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4I,EAAD,CAAWzI,oBAAqBoI,KAAKpI,sBACrCL,EAAAC,EAAAC,cAAC6I,EAAD,CAAa1I,oBAAqBoI,KAAKpI,oBAAqBE,UAAWkI,KAAKhE,MAAMM,cAAcoC,SAFlG,KAE6GnH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAChHF,EAAAC,EAAAC,cAACqC,EAAA,EAAKpB,MAAN,KACGsH,KAAKhE,MAAME,eAAesB,IAAI,SAAAkD,GAC7B,OAAOnJ,EAAAC,EAAAC,cAAC+I,EAAD,CAAU1F,IAAK4F,EAAMzI,GAAIJ,KAAM6I,EAAM7I,KAAMsC,MAAOuG,EAAMvG,MAAOH,QAAS0G,EAAM1G,QAASK,YAAaqG,EAAMrG,YAAaI,gBAAiB2F,EAAK3F,gBAAiBE,SAAU+F,EAAMzI,QAL3L,MAQwB,eAA1B+H,KAAKhE,MAAMK,WAEf9E,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,WACNV,EAAAC,EAAAC,cAAC4I,EAAD,CAAWzI,oBAAqBoI,KAAKpI,sBACrCL,EAAAC,EAAAC,cAAC6I,EAAD,CAAa1I,oBAAqBoI,KAAKpI,oBAAqBE,UAAWkI,KAAKhE,MAAMM,cAAcoC,SAFlG,KAE6GnH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAChHF,EAAAC,EAAAC,cAACqC,EAAA,EAAKpB,MAAN,CAAYqB,UAAQ,EAAC4G,YAAa,GAC/BX,KAAKhE,MAAMM,cAAckB,IAAI,SAACR,EAAM5B,GACnC,OAAO7D,EAAAC,EAAAC,cAACmJ,EAAD,CAAW9F,IAAKM,EAAOT,SAAUqC,EAAKnF,KAAMsC,MAAO6C,EAAK7C,MAAOH,QAASgD,EAAKhD,QAASmB,iBAAkBiF,EAAKjF,iBAAkBC,MAAOA,OAEjJ7D,EAAAC,EAAAC,cAACqC,EAAA,EAAKpB,MAAN,CAAYqB,UAAQ,EAAC4G,YAAa,EAAGjJ,UAAU,cAC7CH,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAMC,SAAUd,KAAKxB,gBACnBjH,EAAAC,EAAAC,cAACoJ,EAAA,EAAKnI,MAAN,CAAYqI,OAAO,SACjBxJ,EAAAC,EAAAC,cAACoJ,EAAA,EAAKG,MAAN,CAAYC,QAASC,IAAOC,MAAM5J,EAAAC,EAAAC,cAAA,sBAAuB2J,YAAY,OAAOC,UAAQ,EAACC,SAAUtB,KAAK3B,gBAAiB3D,MAAOsF,KAAKhE,MAAMQ,aAAc3E,KAAK,iBAC1JN,EAAAC,EAAAC,cAACoJ,EAAA,EAAKG,MAAN,CAAYC,QAASC,IAAOC,MAAM5J,EAAAC,EAAAC,cAAA,yBAAyB2J,YAAY,eACrEG,KAAK,SAASF,UAAQ,EAACC,SAAUtB,KAAK3B,gBAAiBxG,KAAK,gBAAgB6C,MAAOsF,KAAKhE,MAAMS,iBAElGlF,EAAAC,EAAAC,cAACoJ,EAAA,EAAKG,MAAN,CAAYC,QAASO,IAAUL,MAAM5J,EAAAC,EAAAC,cAAA,qCAAqCI,KAAK,qBAAqB6C,MAAOsF,KAAKhE,MAAMU,mBAAoB4E,SAAUtB,KAAK3B,kBACzJ9G,EAAAC,EAAAC,cAAA,yBAAiBuI,KAAKhE,MAAMO,YAAoBhF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACrDF,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACEhB,QAAShC,EAAAC,EAAAC,cAACoJ,EAAA,EAAKG,MAAN,CAAYC,QAASxI,IAAQsC,QAAQ,cAAc0G,SAAO,IACnExG,MAAO,CAAC/B,UAAW,UAAWX,KAAK,QAAQmJ,KAAM1B,KAAKhE,MAAMW,SAC5DpF,EAAAC,EAAAC,cAAC8C,EAAA,EAAMtB,OAAP,wBACA1B,EAAAC,EAAAC,cAAC8C,EAAA,EAAMN,QAAP,iGACA1C,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQF,KAAK,QAAQ0C,MAAO,CAAC0G,MAAO,OAAQ3G,UAAQ,EAACrD,QAASqI,KAAKF,iBAAkB8B,SAAO,GAA5F,QALF,IAK8GrK,EAAAC,EAAAC,cAAA,YAE9GF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,eAILuI,KAAKhE,MAAMK,WAEf9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAC4I,EAAD,CAAWzI,oBAAqBoI,KAAKpI,sBACrCL,EAAAC,EAAAC,cAAC6I,EAAD,CAAa1I,oBAAqBoI,KAAKpI,oBAAqBE,UAAWkI,KAAKhE,MAAMM,cAAcoC,SAChGnH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACzBF,EAAAC,EAAAC,cAAA,KAAGQ,GAAG,iBAAN,qCACAV,EAAAC,EAAAC,cAACoK,EAAD,CAAajK,oBAAqBoI,KAAKpI,+BA9K9BkK,aCMRC,mLARX,OACExK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuK,EAAD,cALwBF,aCUjBG,MATf,WACE,OACE1K,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyK,EAAD,QCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wFClBAC,EAAe,CACnBvG,aAAc,IAkBDwG,EAfS,WAAiC,IAAhCzG,EAAgC0G,UAAAhE,OAAA,QAAAiE,IAAAD,UAAA,GAAAA,UAAA,GAAxBF,EAE/B,QAFuDE,UAAAhE,OAAA,EAAAgE,UAAA,QAAAC,GAEzCpB,MAEZ,IAAK,YAEH,MAAO,CACLtF,aAAcD,EAAMC,aAAe,GAGvC,QACA,OAAOD,ICLL4G,EAAQC,YAAYC,GAG1BC,IAASC,OAAOzL,EAAAC,EAAAC,cAACwL,EAAA,EAAD,CAAUL,MAAOA,GAAOrL,EAAAC,EAAAC,cAACyL,EAAD,OAAoBC,SAASC,eAAe,SFoH9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtD,KAAK,SAAAuD,GACjCA,EAAaC","file":"static/js/main.8f7972cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elfIcon.f6a00497.png\";","module.exports = __webpack_public_path__ + \"static/media/PizzaCover.a157fd76.png\";","module.exports = __webpack_public_path__ + \"static/media/PizzaImage.30597ecc.png\";","import React from 'react';\nconst MenuButtons = (props)=>{\n  return(\n      <div className=\"four ui buttons fluid\">\n        <button className=\"ui button \" onClick={props.handleFilteredItems} name='wingButton'>Wings & Sides</button>\n        <button className=\"ui button \" onClick={props.handleFilteredItems} name='pizzaButton'>Pizza</button>\n        <button className=\"ui button \" onClick={props.handleFilteredItems} name='beverageButton'>Beverages</button>\n        <button className=\"ui button shopping cart icon\" onClick={props.handleFilteredItems} name='cartButton'> Cart - {props.itemCount}\n        </button>\n      </div>\n  )\n}\nexport default MenuButtons;\n","import React from 'react';\nimport {Dropdown, Sticky, Button, Icon} from 'semantic-ui-react';\n\nconst DropDownMenu =(props)=>{\n  return(\n    <Sticky id='menuIcon'>\n      <Dropdown basic inline icon=<Icon  name='bars' size='big' ></Icon> >\n        <Dropdown.Menu id=\"dropdown_background\">\n          <Button.Group vertical>\n            <Button onClick={props.handleFilteredItems} name='pizzaButton'>Pizza Menu</Button>\n            <Button onClick={props.handleFilteredItems} name='wingButton'>Wings & Sides Menu</Button>\n            <Button onClick={props.handleFilteredItems} name='beverageButton'>Beverages Menu</Button>\n            <a href=\"https://yongliang24.github.io/frontend_admin_metro_pizza/\" target=\"_blank\" rel=\"noopener noreferrer\"><Button>Visit Administrator Site</Button></a>\n          </Button.Group><hr/>\n          <a href=\"https://github.com/YongLiang24\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon name=\"github\" size='large' link/></a>\n          <a href=\"https://www.linkedin.com/in/yongliang24/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon name=\"linkedin\" size='large' link/></a>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Sticky>\n  )\n}\nexport default DropDownMenu;\n","import React from 'react';\nimport { Header, Image, Popup} from 'semantic-ui-react';\nimport elfIcon from '../images/elfIcon.png';\nimport DropDownMenu from './DropDownMenu';\n\nconst TopHeader = (props) => (\n  <header >\n    <div >\n      <Header size='medium' textAlign='center' id='myHeader' fluid='true'>\n        <DropDownMenu handleFilteredItems={props.handleFilteredItems}/>\n        <Popup header='Home' trigger={<Image src={elfIcon}  size='huge' onClick={props.handleFilteredItems} name='homePage' className='iconImage'/>} position='bottom center' on='click'/>\n        <p id='myTitle'>Metro Pizza</p>\n      </Header>\n    </div>\n  </header>\n)\nexport default TopHeader;\n","import React from 'react';\nimport { Button, Card, Image, Modal} from 'semantic-ui-react';\nconst ItemCard = (props) => (\n    <Card centered className=\"outterCard\">\n      <Image src={props.img_url} size='medium' centered className='item_card' />\n      <Card.Content>\n        <Card.Header>{props.name}</Card.Header>\n        <Card.Meta>$ {props.price}</Card.Meta>\n        <Card.Description><strong>{props.description}</strong></Card.Description>\n      </Card.Content>\n      <Card.Content extra >\n        <Modal\n          trigger={  <Button fluid color='teal' onClick={props.handleAddToCart} value={props.itemName}>Add to Cart</Button>}\n          header={`\"${props.name}\" has been added to your cart.`}\n          actions={[{ key: 'done', content: 'Okay', positive: true, fluid: true}]}\n          style={{textAlign: \"center\"}} size='small'\n        />\n      </Card.Content>\n    </Card>\n)\nexport default ItemCard\n","import React from 'react';\nimport { Card, Image, Button} from 'semantic-ui-react';\nconst OrderCard = (props)=>{\n  return(\n    <Card centered className=\"outterCard\" id='cart_list'>\n      <Card.Content>\n        <Card.Header>{props.itemName}</Card.Header>\n        <Image src={props.img_url} size='tiny' id='cart_img'/>\n        <Card.Meta >$ {props.price}</Card.Meta>\n      </Card.Content>\n      <Card.Content extra>\n        <Button onClick={props.handleRemoveItem}  value={props.index} negative id='CartRemoveButton' centered='true'>Remove</Button>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default OrderCard\n","import React from 'react'\nimport { Image, Reveal, Popup } from 'semantic-ui-react'\nimport PizzaCover from '../images/PizzaCover.png'\nimport PizzaImage from '../images/PizzaImage.png'\n\nconst RevealPizza = (props) => (\n  <Reveal animated='small fade' id=\"RevealContents\" >\n    <Reveal.Content visible>\n      <Popup content=<p>Metro Pizza is an application which allows customers to place pizza orders online and send orders to the Administrator site.<a href=\"https://yongliang24.github.io/frontend_admin_metro_pizza/\" target=\"_blank\" rel=\"noopener noreferrer\">Link to Administrator</a>. <strong>Note: Metro Pizza is a student's project not a actually restaurant site.</strong></p>  trigger={<Image circular size='large' src={PizzaCover}  className='iconImage'/>}  header=\"About\" position='top center' hoverable on='click'/>\n    </Reveal.Content>\n    <Reveal.Content hidden>\n      <Image circular size='large' src={PizzaImage} />\n    </Reveal.Content>\n  </Reveal>\n)\n\nexport default RevealPizza\n\n// onClick={props.handleFilteredItems} name='pizzaButton'\n","import React, {Component} from 'react';\nimport MenuButtons from './MenuButtons';\nimport TopHeader from './TopHeader';\nimport { Button, Card, TextArea, Form, Input, Modal} from 'semantic-ui-react';\nimport ItemCard from './ItemCard';\nimport OrderCard from './OrderCard';\nimport RevealPizza from './RevealPizza';\n\nclass MenuTabs extends Component{\n  state ={\n    allMenuItems: [], pizzaMenuItems:[], wingMenuItems: [], beverageMenuItems:[],\n    isMenuItem: '', cartListItems: [], totalPrice:0, customerName: '',\n    customerPhone: '', specialInstruction: '', isModal: false\n  }\n\n  componentDidMount(){\n    fetch('https://backend-metro-pizza.herokuapp.com/api/v1/menu_items')\n    .then(resp => resp.json())\n    .then(json =>{this.setState({allMenuItems: json})})\n    .catch(err =>{\n      console.log(\"json error:\", err)\n    })\n  }\n\n  filterItems = (category) =>{\n    let items = this.state.allMenuItems.filter(item =>{\n      return item.category === category\n    })\n    return items\n  }\n\n  handleFilteredItems = (ev)=>{\n    switch(ev.target.name){\n      case 'wingButton':\n        let wingItems = this.filterItems('Wings')\n        this.setState({wingMenuItems: wingItems, isMenuItem: ev.target.name})\n        console.log(\"check wings:\", wingItems)\n        console.log(\"target.name:\", ev.target.name)\n        break;\n      case 'pizzaButton':\n        let pizzaItems = this.filterItems('pizza')\n        this.setState({pizzaMenuItems: pizzaItems, isMenuItem: ev.target.name})\n        break;\n      case 'beverageButton':\n        let beverageItems = this.filterItems('Beverage')\n        this.setState({beverageMenuItems: beverageItems, isMenuItem: ev.target.name})\n        break;\n      case 'cartButton':\n        this.setState({isMenuItem: ev.target.name})\n        let totalPrice = 0;\n        this.state.cartListItems.map(item=>{\n          return totalPrice =(parseFloat(totalPrice) + parseFloat(item.price))})\n        this.setState({totalPrice: totalPrice.toFixed(2), messageHidden: 'hidden'})\n        break;\n      case 'homePage':\n        this.setState({isMenuItem: ev.target.name})\n        break;\n      default:\n        break;\n      }\n    }\n  handleAddToCart =(ev)=>{\n    const selectedItem = this.state.allMenuItems.find(item=>{\n      return item.id.toString() === ev.target.value\n    })\n    const cartObject ={name: selectedItem.name, price: selectedItem.price,\n      img_url: selectedItem.img_url,id: selectedItem.id}\n      let updatedCartItem = this.state.cartListItems.slice();\n      updatedCartItem.push(cartObject);\n      this.setState({cartListItems: updatedCartItem})\n\n  }\n\n  handleRemoveItem = (ev)=>{\n    this.state.cartListItems.splice(ev.target.value, 1)\n    this.setState((prevState) => ({cartListItems: prevState.cartListItems}))\n    let totalPrice = 0;\n    this.state.cartListItems.map(item=>{\n      return totalPrice =(parseFloat(totalPrice) + parseFloat(item.price))})\n    this.setState({totalPrice: totalPrice.toFixed(2)})\n  }\n\n  handleCartInput =(ev)=>{\n    this.setState({[ev.target.name]: ev.target.value})\n  }\n\n  handleCartForm =(ev)=>{\n    ev.preventDefault()\n      if(this.state.cartListItems.length > 0){\n        const currentTime = new Date().toLocaleTimeString()\n        const Order_Time = currentTime;\n        const Customer_Name = ev.target.customerName.value;\n        const Customer_Phone =ev.target.customerPhone.value;\n        const Special_Instruction = ev.target.specialInstruction.value;\n        const Total_Price = this.state.totalPrice;\n        const order_lists = this.state.cartListItems;\n      fetch('https://backend-metro-pizza.herokuapp.com/api/v1/orders',{\n        method: 'POST',\n        headers:{'Content-Type': 'application/json',\n          Accept: 'application/json'},\n          body: JSON.stringify({Customer_Name, Customer_Phone, Special_Instruction, Total_Price, Order_Time, order_lists} )\n      })\n      .catch(err =>{\n        console.log(\"json error:\", err)\n      })\n      this.setState({cartListItems: [], customerName: '', customerPhone: '', specialInstruction: '', totalPrice: 0, messageHidden: 'visible', isModal: true})\n      }\n      else{alert(\"Sorry the cart is empty.\")}\n  }\n\n  handleModalClose = ()=>{\n    this.setState({isModal: false, isMenuItem: 'homePage'})\n  }\n\n  render(){\n    if(this.state.isMenuItem === \"wingButton\"){\n      return (\n        <div>\n          <TopHeader handleFilteredItems={this.handleFilteredItems}/>\n          <MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/>  <br/><br/>\n          <Card.Group >\n            {this.state.wingMenuItems.map(wing =>{\n              return  <ItemCard key={wing.id} name={wing.name} price={wing.price} img_url={wing.img_url} description={wing.description}\n                handleAddToCart={this.handleAddToCart} itemName={wing.id}/>\n            })}\n            </Card.Group> </div> )}\n            else if(this.state.isMenuItem === \"beverageButton\"){\n              return(\n                <div>\n                  <TopHeader handleFilteredItems={this.handleFilteredItems}/>\n                  <MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/>  <br/><br/>\n                  <Card.Group >\n                    {this.state.beverageMenuItems.map(beverage =>{\n                      return   <ItemCard key={beverage.id} name={beverage.name} price={beverage.price} img_url={beverage.img_url} description={beverage.description} handleAddToCart={this.handleAddToCart} itemName={beverage.id} />\n                    })}\n                  </Card.Group>  </div>  )}\n            else if(this.state.isMenuItem === \"pizzaButton\"){\n              return(\n                <div>\n                  <TopHeader handleFilteredItems={this.handleFilteredItems}/>\n                  <MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/>  <br/><br/>\n                  <Card.Group >\n                    {this.state.pizzaMenuItems.map(pizza =>{\n                      return <ItemCard key={pizza.id} name={pizza.name} price={pizza.price} img_url={pizza.img_url} description={pizza.description} handleAddToCart={this.handleAddToCart} itemName={pizza.id}/>\n                        })}\n            </Card.Group>  </div>  )}\n      else if(this.state.isMenuItem === \"cartButton\"){\n        return(\n          <div id='cartDiv'>\n            <TopHeader handleFilteredItems={this.handleFilteredItems}/>\n            <MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/>  <br/><br/>\n            <Card.Group centered itemsPerRow={2}>\n              {this.state.cartListItems.map((item, index)=>{\n                return <OrderCard key={index} itemName={item.name} price={item.price} img_url={item.img_url} handleRemoveItem={this.handleRemoveItem} index={index}/>})}\n            </Card.Group>\n            <Card.Group centered itemsPerRow={1} className='form_order'>\n              <Form onSubmit={this.handleCartForm}>\n                <Form.Group widths='equal'>\n                  <Form.Field control={Input} label=<strong>Name</strong>  placeholder='Name' required onChange={this.handleCartInput} value={this.state.customerName} name='customerName'/>\n                  <Form.Field control={Input} label=<strong>Phone #</strong> placeholder='Phone Number'\n                    type='number' required onChange={this.handleCartInput} name='customerPhone' value={this.state.customerPhone}/>\n                </Form.Group>\n                <Form.Field control={TextArea} label=<strong>Special Instruction</strong> name=\"specialInstruction\" value={this.state.specialInstruction} onChange={this.handleCartInput}/>\n                <strong>Total: ${this.state.totalPrice}</strong><br/><br/>\n                <Modal\n                  trigger={<Form.Field control={Button} content='Place Order' primary/>}\n                  style={{textAlign: \"center\"}} size='small' open={this.state.isModal}>\n                  <Modal.Header>Order Completed</Modal.Header>\n                  <Modal.Content>We have received your order. It will be ready for pickup in 15 to 30 minutes. Thank You.</Modal.Content>\n                  <Button size='large' style={{width: \"30%\"}} positive onClick={this.handleModalClose} compact >Okay</Button> <hr/>\n              </Modal>\n                <br/><hr/>\n              </Form>\n            </Card.Group>\n            </div>)}\n        else if(this.state.isMenuItem === \"homePage\"){\n          return(\n            <div className=\"mainPageDiv\">\n              <TopHeader handleFilteredItems={this.handleFilteredItems}/>\n              <MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/>\n              <br/><br/><br/><br/><br/><br/>\n              <p id='mainParagraph'>Click on the tray below to start!</p>\n              <RevealPizza handleFilteredItems={this.handleFilteredItems}/>\n            </div>\n          )\n        }\n        else{\n          return(\n            <div className=\"mainPageDiv\">\n              <TopHeader handleFilteredItems={this.handleFilteredItems}/>\n              <MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/>\n              <br/><br/><br/><br/><br/><br/>\n              <p id='mainParagraph'>Click on the tray below to start!</p>\n              <RevealPizza handleFilteredItems={this.handleFilteredItems}/>\n            </div>\n          )}\n        }\n  }\n\nexport default MenuTabs;\n","import React, {Component} from 'react';\nimport MenuTabs from '../components/MenuTabs';\n\nclass ItemCartContainer extends Component{\n\n  render(){\n    return(\n      <div>\n        <MenuTabs />\n      </div>\n    )\n  }\n}\n\nexport default ItemCartContainer;\n","import React from 'react';\nimport './App.css';\nimport ItemCartContainer from './containers/ItemCartContainer';\n\nfunction App() {\n  return (\n    <div>\n    <ItemCartContainer />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  allMenuItems: []\n}\n\nconst MenuItemReducer = (state = initialState, action) =>{\n\n  switch(action.type){\n\n    case 'showWings':\n      //console.log('hitting reducer', state)\n      return {\n        allMenuItems: state.allMenuItems + 1\n      }\n\n    default:\n    return state;\n  }\n}\n\nexport default MenuItemReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Provider } from \"react-redux\";\nimport { createStore } from 'redux';\nimport reducer from './reducers/MenuItemReducer';\n\nconst store = createStore(reducer);\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}