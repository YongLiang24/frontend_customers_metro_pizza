{"version":3,"sources":["images/PizzaCover.png","images/PizzaImage.png","components/MenuButtons.js","components/DropDownMenu.js","components/TopHeader.js","components/ItemCard.js","components/OrderCard.js","components/RevealPizza.js","components/MenuTabs.js","containers/ItemCartContainer.js","App.js","serviceWorker.js","reducers/MenuItemReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuButtons","props","react_default","a","createElement","className","onClick","handleFilteredItems","name","itemCount","DropDownMenu","Dropdown","basic","inline","icon","Icon","size","Menu","id","Button","Group","vertical","href","target","rel","link","TopHeader","Header","components_DropDownMenu","ItemCard","Card","centered","Image","src","img_url","Content","Meta","price","Description","description","extra","Modal","trigger","fluid","color","handleAddToCart","value","itemName","header","concat","actions","key","content","positive","style","textAlign","OrderCard","handleRemoveItem","index","negative","RevealPizza","Reveal","animated","visible","Popup","circular","PizzaCover","position","hoverable","on","hidden","PizzaImage","MenuTabs","state","allMenuItems","pizzaMenuItems","wingMenuItems","beverageMenuItems","isMenuItem","cartListItems","totalPrice","customerName","customerPhone","specialInstruction","isModal","itemPerRow","filterItems","category","_this","filter","item","ev","wingItems","setState","pizzaItems","beverageItems","map","parseFloat","toFixed","messageHidden","selectedItem","find","toString","cartObject","updatedCartItem","slice","push","splice","prevState","handleCartInput","Object","defineProperty","handleCartForm","preventDefault","length","Order_Time","Date","toLocaleTimeString","Customer_Name","Customer_Phone","Special_Instruction","Total_Price","order_lists","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","catch","err","console","log","alert","handleModalClose","handleItemPerRow","window","innerWidth","_this2","this","setInterval","then","resp","json","_this3","fixed","components_TopHeader","components_MenuButtons","itemsPerRow","wing","components_ItemCard","beverage","pizza","components_OrderCard","Form","onSubmit","widths","Field","control","Input","label","placeholder","required","onChange","type","TextArea","primary","open","width","compact","components_RevealPizza","Component","ItemCartContainer","components_MenuTabs","App","containers_ItemCartContainer","Boolean","location","hostname","match","initialState","MenuItemReducer","arguments","undefined","store","createStore","reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24bca573.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PizzaCover.a157fd76.png\";","module.exports = __webpack_public_path__ + \"static/media/PizzaImage.30597ecc.png\";","import React from 'react';\nconst MenuButtons = (props)=>{\n  return(\n      <div className=\"four ui buttons fluid\">\n        <button className=\"ui button \" onClick={props.handleFilteredItems} name='wingButton'>Wings & Sides</button>\n        <button className=\"ui button \" onClick={props.handleFilteredItems} name='pizzaButton'>Pizza</button>\n        <button className=\"ui button \" onClick={props.handleFilteredItems} name='beverageButton'>Beverages</button>\n        <button className=\"ui button shopping cart icon\" onClick={props.handleFilteredItems} name='cartButton'> Cart - {props.itemCount}\n        </button>\n      </div>\n  )\n}\nexport default MenuButtons;\n","import React from 'react';\nimport {Dropdown, Button, Icon} from 'semantic-ui-react';\n\nconst DropDownMenu =(props)=>{\n  return(\n      <Dropdown basic inline icon=<Icon  name='bars' size='huge'></Icon>>\n        <Dropdown.Menu id=\"dropdown_background\">\n          <Button.Group vertical>\n            <Button onClick={props.handleFilteredItems} name=\"homePage\">Home Page</Button>\n            <a href=\"https://yongliang24.github.io/frontend_admin_metro_pizza/\" target=\"_blank\" rel=\"noopener noreferrer\"><Button>Visit Administrator Site</Button></a>\n          </Button.Group><hr/>\n          <a href=\"https://github.com/YongLiang24\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon name=\"github\" size='large' link/></a>\n          <a href=\"https://www.linkedin.com/in/yongliang24/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon name=\"linkedin\" size='large' link/></a>\n        </Dropdown.Menu>\n      </Dropdown>\n  )\n}\nexport default DropDownMenu;\n","import React from 'react';\nimport { Header} from 'semantic-ui-react';\nimport DropDownMenu from './DropDownMenu';\n\nconst TopHeader = (props) => (\n  <div id='myHeader'>\n    <Header  >\n      <DropDownMenu handleFilteredItems={props.handleFilteredItems}/>\n    </Header>\n  </div>\n)\nexport default TopHeader;\n","import React from 'react';\nimport { Button, Card, Image, Modal} from 'semantic-ui-react';\nconst ItemCard = (props) => (\n    <Card centered className=\"outterCard\" id=\"menu_card\">\n      <Image src={props.img_url} size='medium' centered className='item_card' />\n      <Card.Content>\n        <Card.Header>{props.name}</Card.Header>\n        <Card.Meta>$ {props.price}</Card.Meta>\n        <Card.Description><strong>{props.description}</strong></Card.Description>\n      </Card.Content>\n      <Card.Content extra >\n        <Modal\n          trigger={  <Button fluid color='teal' onClick={props.handleAddToCart} value={props.itemName}>Add to Cart</Button>}\n          header={`\"${props.name}\" has been added to your cart.`}\n          actions={[{ key: 'done', content: 'Okay', positive: true, fluid: true}]}\n          style={{textAlign: \"center\"}} size='small'\n        />\n      </Card.Content>\n    </Card>\n)\nexport default ItemCard\n","import React from 'react';\nimport { Card, Image, Button} from 'semantic-ui-react';\nconst OrderCard = (props)=>{\n  return(\n    <Card centered className=\"outterCard\" id='cart_list'>\n      <Card.Content>\n        <Card.Header>{props.itemName}</Card.Header>\n        <Image src={props.img_url} size='tiny' id='cart_img'/>\n        <Card.Meta >$ {props.price}</Card.Meta>\n      </Card.Content>\n      <Card.Content extra>\n        <Button onClick={props.handleRemoveItem}  value={props.index} negative id='CartRemoveButton' centered='true'>Remove</Button>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default OrderCard\n","import React from 'react'\nimport { Image, Reveal, Popup } from 'semantic-ui-react'\nimport PizzaCover from '../images/PizzaCover.png'\nimport PizzaImage from '../images/PizzaImage.png'\n\nconst RevealPizza = (props) => (\n  <Reveal animated='small fade' id=\"RevealContents\" >\n    <Reveal.Content visible>\n      <Popup content=<p>Metro Pizza is an application which allows customers to place pizza orders online and send orders to the Administrator site.<a href=\"https://yongliang24.github.io/frontend_admin_metro_pizza/\" target=\"_blank\" rel=\"noopener noreferrer\">Link to Administrator</a>. <strong>Note: Metro Pizza is a personal project not a actually restaurant site.</strong></p>  trigger={<Image circular size='medium' src={PizzaCover}  className='iconImage'/>}  header=\"About\" position='top center' hoverable on='click'/>\n    </Reveal.Content>\n    <Reveal.Content hidden>\n      <Image circular size='medium' src={PizzaImage} />\n    </Reveal.Content>\n  </Reveal>\n)\n\nexport default RevealPizza\n\n// onClick={props.handleFilteredItems} name='pizzaButton'\n","import React, {Component} from 'react';\nimport MenuButtons from './MenuButtons';\nimport TopHeader from './TopHeader';\nimport { Button, Card, TextArea, Form, Input, Modal, Menu} from 'semantic-ui-react';\nimport ItemCard from './ItemCard';\nimport OrderCard from './OrderCard';\nimport RevealPizza from './RevealPizza';\n\nclass MenuTabs extends Component{\n  state ={\n    allMenuItems: [], pizzaMenuItems:[], wingMenuItems: [], beverageMenuItems:[],\n    isMenuItem: '', cartListItems: [], totalPrice:0, customerName: '',\n    customerPhone: '', specialInstruction: '', isModal: false, itemPerRow: 4\n  }\n\n  componentDidMount(){\n    setInterval(this.handleItemPerRow, 3000)\n    fetch('https://backend-metro-pizza.herokuapp.com/api/v1/menu_items')\n    .then(resp => resp.json())\n    .then(json =>{this.setState({allMenuItems: json})})\n    .catch(err =>{\n      console.log(\"json error:\", err)\n    })\n  }\n\n  filterItems = (category) =>{\n    let items = this.state.allMenuItems.filter(item =>{\n      return item.category === category\n    })\n    return items\n  }\n\n  handleFilteredItems = (ev)=>{\n    // console.log(ev.target.name)\n    switch(ev.target.name){\n      case 'wingButton':\n        let wingItems = this.filterItems('Wings')\n        this.setState({wingMenuItems: wingItems, isMenuItem: ev.target.name})\n        break;\n      case 'pizzaButton':\n        let pizzaItems = this.filterItems('pizza')\n        this.setState({pizzaMenuItems: pizzaItems, isMenuItem: ev.target.name})\n        break;\n      case 'beverageButton':\n        let beverageItems = this.filterItems('Beverage')\n        this.setState({beverageMenuItems: beverageItems, isMenuItem: ev.target.name})\n        break;\n      case 'cartButton':\n        this.setState({isMenuItem: ev.target.name})\n        let totalPrice = 0;\n        this.state.cartListItems.map(item=>{\n          return totalPrice =(parseFloat(totalPrice) + parseFloat(item.price))})\n        this.setState({totalPrice: totalPrice.toFixed(2), messageHidden: 'hidden'})\n        break;\n      case 'homePage':\n        this.setState({isMenuItem: ev.target.name})\n        break;\n      default:\n        break;\n      }\n    }\n  handleAddToCart =(ev)=>{\n    const selectedItem = this.state.allMenuItems.find(item=>{\n      return item.id.toString() === ev.target.value\n    })\n    const cartObject ={name: selectedItem.name, price: selectedItem.price,\n      img_url: selectedItem.img_url,id: selectedItem.id}\n      let updatedCartItem = this.state.cartListItems.slice();\n      updatedCartItem.push(cartObject);\n      this.setState({cartListItems: updatedCartItem})\n\n  }\n\n  handleRemoveItem = (ev)=>{\n    this.state.cartListItems.splice(ev.target.value, 1)\n    this.setState((prevState) => ({cartListItems: prevState.cartListItems}))\n    let totalPrice = 0;\n    this.state.cartListItems.map(item=>{\n      return totalPrice =(parseFloat(totalPrice) + parseFloat(item.price))})\n    this.setState({totalPrice: totalPrice.toFixed(2)})\n  }\n\n  handleCartInput =(ev)=>{\n    this.setState({[ev.target.name]: ev.target.value})\n  }\n\n  handleCartForm =(ev)=>{\n    ev.preventDefault()\n      if(this.state.cartListItems.length > 0){\n        const currentTime = new Date().toLocaleTimeString()\n        const Order_Time = currentTime;\n        const Customer_Name = ev.target.customerName.value;\n        const Customer_Phone =ev.target.customerPhone.value;\n        const Special_Instruction = ev.target.specialInstruction.value;\n        const Total_Price = this.state.totalPrice;\n        const order_lists = this.state.cartListItems;\n      fetch('https://backend-metro-pizza.herokuapp.com/api/v1/orders',{\n        method: 'POST',\n        headers:{'Content-Type': 'application/json',\n          Accept: 'application/json'},\n          body: JSON.stringify({Customer_Name, Customer_Phone, Special_Instruction, Total_Price, Order_Time, order_lists} )\n      })\n      .catch(err =>{\n        console.log(\"json error:\", err)\n      })\n      this.setState({cartListItems: [], customerName: '', customerPhone: '', specialInstruction: '', totalPrice: 0, messageHidden: 'visible', isModal: true})\n      }\n      else{alert(\"Sorry the cart is empty.\")}\n  }\n\n  handleModalClose = ()=>{\n    this.setState({isModal: false, isMenuItem: 'homePage'})\n  }\n\n  handleItemPerRow =()=>{\n    // console.log(\"x\")\n    const windowWidth = window.innerWidth\n    if(windowWidth < 1000){\n      this.setState({itemPerRow: 1})\n    }\n    else{\n      this.setState({itemPerRow: 4})\n    }\n  }\n\n  render(){\n    if(this.state.isMenuItem === \"wingButton\"){\n      return (\n        <div>\n          <Menu fixed=\"top\" size=\"mini\">\n            <TopHeader handleFilteredItems={this.handleFilteredItems}/> <MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/></Menu><br/><br/><br/><br/><br/>\n          <Card.Group centered itemsPerRow={this.state.itemPerRow}>\n            {this.state.wingMenuItems.map(wing =>{\n              return  <ItemCard key={wing.id} name={wing.name} price={wing.price} img_url={wing.img_url} description={wing.description}\n                handleAddToCart={this.handleAddToCart} itemName={wing.id}/>\n            })}\n            </Card.Group> </div> )}\n            else if(this.state.isMenuItem === \"beverageButton\"){\n              return(\n                <div>\n                  <Menu fixed=\"top\" size=\"mini\">\n                    <TopHeader handleFilteredItems={this.handleFilteredItems}/><MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/></Menu><br/><br/><br/><br/><br/>\n                  <Card.Group centered itemsPerRow={this.state.itemPerRow}>\n                    {this.state.beverageMenuItems.map(beverage =>{\n                      return   <ItemCard key={beverage.id} name={beverage.name} price={beverage.price} img_url={beverage.img_url} description={beverage.description} handleAddToCart={this.handleAddToCart} itemName={beverage.id} />\n                    })}\n                  </Card.Group>  </div>  )}\n            else if(this.state.isMenuItem === \"pizzaButton\"){\n              return(\n                <div>\n                  <Menu fixed=\"top\" size=\"mini\">\n                    <TopHeader handleFilteredItems={this.handleFilteredItems}/><MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/></Menu><br/><br/><br/><br/><br/>\n                  <Card.Group centered itemsPerRow={this.state.itemPerRow}>\n                    {this.state.pizzaMenuItems.map(pizza =>{\n                      return <ItemCard key={pizza.id} name={pizza.name} price={pizza.price} img_url={pizza.img_url} description={pizza.description} handleAddToCart={this.handleAddToCart} itemName={pizza.id}/>\n                        })}\n            </Card.Group>  </div>  )}\n      else if(this.state.isMenuItem === \"cartButton\"){\n        return(\n          <div id='cartDiv'>\n            <Menu fixed=\"top\" size=\"mini\">\n              <TopHeader handleFilteredItems={this.handleFilteredItems}/><MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/></Menu><br/><br/><br/><br/><br/>\n            <Card.Group centered itemsPerRow={2}>\n              {this.state.cartListItems.map((item, index)=>{\n                return <OrderCard key={index} itemName={item.name} price={item.price} img_url={item.img_url} handleRemoveItem={this.handleRemoveItem} index={index}/>})}\n            </Card.Group>\n            <Card.Group centered itemsPerRow={1} className='form_order'>\n              <Form onSubmit={this.handleCartForm}>\n                <Form.Group widths='equal'>\n                  <Form.Field control={Input} label=<strong>Name</strong>  placeholder='Name' required onChange={this.handleCartInput} value={this.state.customerName} name='customerName'/>\n                  <Form.Field control={Input} label=<strong>Phone #</strong> placeholder='Phone Number'\n                    type='number' required onChange={this.handleCartInput} name='customerPhone' value={this.state.customerPhone}/>\n                </Form.Group>\n                <Form.Field control={TextArea} label=<strong>Special Instruction</strong> name=\"specialInstruction\" value={this.state.specialInstruction} onChange={this.handleCartInput}/>\n                <strong>Total: ${this.state.totalPrice}</strong><br/><br/>\n                <Modal\n                  trigger={<Form.Field control={Button} content='Place Order' primary/>}\n                  style={{textAlign: \"center\"}} size='small' open={this.state.isModal}>\n                  <Modal.Header>Order Completed</Modal.Header>\n                  <Modal.Content>We have received your order. It will be ready for pickup in 15 to 30 minutes. Thank You.</Modal.Content>\n                  <Button size='large' style={{width: \"30%\"}} positive onClick={this.handleModalClose} compact >Okay</Button> <hr/>\n              </Modal>\n                <br/><hr/>\n              </Form>\n            </Card.Group>\n            </div>)}\n        else if(this.state.isMenuItem === \"homePage\"){\n          return(\n            <div className=\"mainPageDiv\">\n              <Menu fixed=\"top\" size=\"mini\">\n                <TopHeader handleFilteredItems={this.handleFilteredItems}/><MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/></Menu><br/><br/><br/><br/><br/>\n              <p id='mainParagraph'>Click on the tray below to start!</p>\n              <RevealPizza handleFilteredItems={this.handleFilteredItems}/>\n            </div>\n          )\n        }\n        else{\n          return(\n            <div className=\"mainPageDiv\">\n              <Menu fixed=\"top\" size=\"mini\">\n                <TopHeader handleFilteredItems={this.handleFilteredItems}/><MenuButtons handleFilteredItems={this.handleFilteredItems} itemCount={this.state.cartListItems.length}/></Menu><br/><br/><br/><br/><br/>\n              <p id='mainParagraph'>Click on the tray below to start!</p>\n              <RevealPizza handleFilteredItems={this.handleFilteredItems}/>\n            </div>\n          )}\n        }\n  }\n\nexport default MenuTabs;\n","import React, {Component} from 'react';\nimport MenuTabs from '../components/MenuTabs';\n\nclass ItemCartContainer extends Component{\n\n  render(){\n    return(\n      <div>\n        <MenuTabs />\n      </div>\n    )\n  }\n}\n\nexport default ItemCartContainer;\n","import React from 'react';\nimport './App.css';\nimport ItemCartContainer from './containers/ItemCartContainer';\n\nfunction App() {\n  return (\n    <div>\n    <ItemCartContainer />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  allMenuItems: []\n}\n\nconst MenuItemReducer = (state = initialState, action) =>{\n\n  switch(action.type){\n\n    case 'showWings':\n      //console.log('hitting reducer', state)\n      return {\n        allMenuItems: state.allMenuItems + 1\n      }\n\n    default:\n    return state;\n  }\n}\n\nexport default MenuItemReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Provider } from \"react-redux\";\nimport { createStore } from 'redux';\nimport reducer from './reducers/MenuItemReducer';\n\nconst store = createStore(reducer);\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}